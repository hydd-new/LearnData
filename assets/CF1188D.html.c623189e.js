import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,d as p}from"./app.e99e8fad.js";const t={},o=p(`<ul><li>\u7ED9\u5B9A $n$ \u4E2A\u6570\u5B57 $a_1,a_2,\\cdots,a_n$\uFF0C\u6BCF\u6B21\u64CD\u4F5C\u53EF\u4EE5\u7ED9\u67D0\u4E2A $a_i$ \u52A0\u4E0A $2$ \u7684\u975E\u8D1F\u6574\u6570\u6B21\u5E42\u3002</li><li>\u6C42\u6700\u5C11\u7684\u64CD\u4F5C\u6B21\u6570\u4F7F\u5F97 $n$ \u4E2A\u6570\u76F8\u7B49\u3002</li><li>$1\\leq n\\leq 10^5,0\\leq a_i\\leq 10^{17}$</li></ul><h3 id="sol" tabindex="-1"><a class="header-anchor" href="#sol" aria-hidden="true">#</a> sol</h3><ul><li><p>\u4E0D\u59A8\u5148\u5C06 $a$ \u4ECE\u5C0F\u5230\u5927\u6392\u5E8F\u3002</p></li><li><p>\u8BBE\u6700\u540E\u6BCF\u4E2A\u6570\u90FD\u7B49\u4E8E $a_n+x(x\\geq 0)$\u3002\u90A3\u4E48\u603B\u4EE3\u4EF7\u4E3A $\\sum\\limits_{i=1}^n popcount(a_n+x-a_i)$\u3002</p></li><li><p>\u73B0\u5728\u8981\u627E\u4E00\u4E2A $x$ \u4F7F\u5F97\u7B54\u6848\u6700\u5C0F\u3002\u4E0D\u59A8\u5148\u5C06 $a_i$ \u53D8\u4E3A\u539F\u5148\u7684 $a_n-a_i$\u3002</p></li><li><p>\u90A3\u4E48\u73B0\u5728\u603B\u4EE3\u4EF7\u4E3A $\\sum\\limits_{i=1}^n popcount(x+a_i)$\u3002</p></li><li><p>\u4ECE\u4F4E\u5230\u9AD8\u8003\u8651\u6BCF\u4E00\u4F4D\uFF0C\u90A3\u4E48 $x+a_i$ \u7684\u7B2C $k$ \u4F4D\u662F $0/1$ \u7531\u4EE5\u4E0B\u4E09\u4E2A\u6761\u4EF6\u51B3\u5B9A\uFF1A</p><ol><li>$x$ \u7684\u7B2C $k$ \u4F4D\u662F $0$ \u8FD8\u662F $1$</li><li>$a_i$ \u7684\u7B2C $k$ \u4F4D\u662F $0$ \u8FD8\u662F $1$</li><li>$x+a_i$ \u7684\u7B2C $k-1$ \u4F4D\u6709\u6CA1\u6709\u5411\u524D\u8FDB\u4F4D</li></ol></li><li><p>\u66B4\u529B\u7684\u505A\u6CD5\u662F\u4ECE\u4F4E\u5230\u9AD8\u679A\u4E3E\u6BCF\u4E00\u4F4D\uFF0C\u7528 $2^n$ \u7684\u72B6\u6001\u8BB0\u5F55\u6BCF\u4E2A\u6570\u6709\u6CA1\u6709\u8FDB\u4F4D\uFF0C\u663E\u7136\u590D\u6742\u5EA6\u63A5\u53D7\u4E0D\u4E86\u3002</p></li><li><p>\u4F46\u662F\u53EF\u4EE5\u53D1\u73B0\uFF0C\u7531\u4E8E\u6BCF\u4E2A $a_i$ \u52A0\u7684\u90FD\u662F $x$\uFF0C\u6240\u4EE5 $a_i$ \u7684\u540E $k-1$ \u4F4D\u8D8A\u5927\uFF0C\u8D8A\u53EF\u80FD\u5411\u7B2C $k$ \u4F4D\u8FDB\u4F4D\u3002</p></li><li><p>\u6240\u4EE5\uFF0C\u201C\u6BCF\u4E2A\u6570\u6709\u6CA1\u6709\u8FDB\u4F4D\u201D\u7684\u72B6\u6001\u6570\u53EA\u6709 $O(n)$ \u4E2A\uFF0C\u6BCF\u4E2A\u8FDB\u4F4D\u72B6\u6001\u4E3A\u540E $k-1$ \u4F4D\u4ECE\u5C0F\u5230\u5927\u6392\u5E8F\u540E\u7684\u4E00\u4E2A\u540E\u7F00\u3002</p></li><li><p>\u8BB0 $f[k][i]$ \u8868\u793A\u8003\u8651\u4E86\u540E $k$ \u4F4D\uFF0C\u540E $k$ \u4F4D\u6700\u5927\u7684 $i$ \u4E2A\u6570\u8FDB\u4F4D\u7684\u6700\u5C0F\u4EE3\u4EF7\u3002</p></li><li><p>\u5982\u4F55\u8F6C\u79FB\uFF1F\u8003\u8651\u5F53\u524D\u8FD9\u4E00\u4F4D $x$ \u662F $0$ \u8FD8\u662F $1$\u3002</p></li><li><p>0\uFF1A</p><ul><li>\u5BF9\u7B54\u6848\u7684\u8D21\u732E\uFF1A\u201C\u524D\u4E00\u4F4D\u6CA1\u8FDB\u4F4D\u4E14\u7B2C $k$ \u4F4D\u4E3A $1$ \u7684\u6570\u201C\u7684\u4E2A\u6570 + \u201D\u524D\u4E00\u4F4D\u8FDB\u4F4D\u4E14\u7B2C $k$ \u4F4D\u4E3A $0$ \u7684\u6570\u201C\u7684\u4E2A\u6570\uFF08$x+a_i$ \u5728\u8FD9\u4E00\u4F4D\u4E3A $1$\uFF09\uFF1B</li><li>\u8FDB\u4F4D\u7684\u6570\u91CF\uFF1A&quot;\u524D\u4E00\u4F4D\u8FDB\u4F4D\u4E14\u7B2C $k$ \u4F4D\u4E3A $1$ \u7684\u6570&quot;\u7684\u4E2A\u6570\u3002</li></ul></li><li><p>1\uFF1A</p><ul><li>\u5BF9\u7B54\u6848\u7684\u8D21\u732E\uFF1A\u201C\u524D\u4E00\u4F4D\u8FDB\u4F4D\u4E14\u7B2C $k$ \u4F4D\u4E3A $1$ \u7684\u6570\u201C\u7684\u4E2A\u6570 + \u201D\u524D\u4E00\u4F4D\u6CA1\u8FDB\u4F4D\u4E14\u7B2C $k$ \u4F4D\u4E3A $0$ \u7684\u6570\u201C\u7684\u4E2A\u6570\uFF08$x+a_i$ \u5728\u8FD9\u4E00\u4F4D\u4E3A $1$\uFF09\uFF1B</li><li>\u8FDB\u4F4D\u7684\u6570\u91CF\uFF1A$n-$&quot;\u524D\u4E00\u4F4D\u6CA1\u8FDB\u4F4D\u4E14\u7B2C $k$ \u4F4D\u4E3A $0$ \u7684\u6570&quot;\u7684\u4E2A\u6570\u3002</li></ul></li><li><p>\u81F3\u4E8E\u5982\u4F55\u6C42\u8FD9\u4E9B\u201C\u4E2A\u6570\u201D\uFF0C\u5C31\u8BB0\u4E2A\u524D\u7F00\u548C\uFF0C\u5B58\u4E0B\u540E $k$ \u4F4D\u4ECE\u5C0F\u5230\u5927\u524D $i$ \u4E2A\u4E2D\u6CA1\u8FDB\u4F4D\u6570\u7684\u4E2A\u6570\u548C\u8FDB\u4F4D\u7684\u6570\u7684\u4E2A\u6570\u5373\u53EF\u3002</p></li><li><p>\u53EF\u4EE5\u7528\u7C7B\u4F3C\u4E8E\u57FA\u6570\u6392\u5E8F\u7684\u65B9\u6CD5\u4F18\u5316\u6BCF\u6B21\u7684\u6392\u5E8F\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6 $O(n \\log V)$\uFF0C\u5176\u4E2D $V=\\max{a_i}$\u3002</p></li></ul><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;cstdio&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;algorithm&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">typedef</span> <span class="token keyword">long</span> <span class="token keyword">long</span> ll<span class="token punctuation">;</span>
<span class="token keyword">const</span> ll INF<span class="token operator">=</span><span class="token number">1ll</span><span class="token operator">&lt;&lt;</span><span class="token number">60</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> n<span class="token punctuation">,</span>p<span class="token punctuation">[</span><span class="token number">510000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>sum<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">510000</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> tmp1<span class="token punctuation">[</span><span class="token number">510000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>tmp2<span class="token punctuation">[</span><span class="token number">510000</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
ll dp<span class="token punctuation">[</span><span class="token number">60</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">510000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>c1<span class="token punctuation">,</span>c2<span class="token punctuation">,</span>c3<span class="token punctuation">,</span>p1<span class="token punctuation">,</span>p2<span class="token punctuation">,</span>m<span class="token punctuation">;</span>
ll sta<span class="token punctuation">,</span>a<span class="token punctuation">[</span><span class="token number">510000</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">/*bool cmp(int x,int y){
	return (a[x]&amp;sta)&lt;(a[y]&amp;sta);
}*/</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token comment">//	freopen(&quot;equal.in&quot;,&quot;r&quot;,stdin);</span>
<span class="token comment">//	freopen(&quot;equal.out&quot;,&quot;w&quot;,stdout);</span>
	<span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">&quot;%lld&quot;</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">sort</span><span class="token punctuation">(</span>a<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>a<span class="token operator">+</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>a<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token operator">-</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> w<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>w<span class="token operator">&lt;=</span><span class="token number">58</span><span class="token punctuation">;</span>w<span class="token operator">++</span><span class="token punctuation">)</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
			dp<span class="token punctuation">[</span>w<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>INF<span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> p<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>i<span class="token punctuation">;</span>
	dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> w<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>w<span class="token operator">&lt;</span><span class="token number">58</span><span class="token punctuation">;</span>w<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		sta<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">1ll</span><span class="token operator">&lt;&lt;</span>w<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token comment">//		sort(p+1,p+n+1,cmp);</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			sum<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>sum<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
			sum<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>sum<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
			sum<span class="token punctuation">[</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>p<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">&gt;&gt;</span>w<span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">int</span> tmp<span class="token operator">=</span><span class="token punctuation">(</span>sum<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token operator">-</span>sum<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token operator">-</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span>sum<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token operator">-</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
			<span class="token keyword">int</span> sta<span class="token operator">=</span>sum<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token operator">-</span>sum<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token operator">-</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
			dp<span class="token punctuation">[</span>w<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>sta<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">min</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>w<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>sta<span class="token punctuation">]</span><span class="token punctuation">,</span>dp<span class="token punctuation">[</span>w<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span>tmp<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">int</span> tmp<span class="token operator">=</span><span class="token punctuation">(</span>sum<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token operator">-</span>sum<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token operator">-</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span>sum<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token operator">-</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
			<span class="token keyword">int</span> sta<span class="token operator">=</span>n<span class="token operator">-</span>sum<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token operator">-</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
			dp<span class="token punctuation">[</span>w<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>sta<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">min</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>w<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>sta<span class="token punctuation">]</span><span class="token punctuation">,</span>dp<span class="token punctuation">[</span>w<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span>tmp<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">int</span> cnt1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>cnt2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>p<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">&gt;&gt;</span>w<span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">1</span><span class="token punctuation">)</span> tmp1<span class="token punctuation">[</span><span class="token operator">++</span>cnt1<span class="token punctuation">]</span><span class="token operator">=</span>p<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
			<span class="token keyword">else</span> tmp2<span class="token punctuation">[</span><span class="token operator">++</span>cnt2<span class="token punctuation">]</span><span class="token operator">=</span>p<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token keyword">int</span> k<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>cnt2<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> p<span class="token punctuation">[</span><span class="token operator">++</span>k<span class="token punctuation">]</span><span class="token operator">=</span>tmp2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>cnt1<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> p<span class="token punctuation">[</span><span class="token operator">++</span>k<span class="token punctuation">]</span><span class="token operator">=</span>tmp1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%lld\\n&quot;</span><span class="token punctuation">,</span>dp<span class="token punctuation">[</span><span class="token number">58</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),c=[o];function e(u,l){return s(),a("div",null,c)}var r=n(t,[["render",e],["__file","CF1188D.html.vue"]]);export{r as default};
